#!/usr/bin/env bash

#
# https://github.com/composer/composer
#

ScriptRoot="$( cd "$( dirname "$0"  )" && pwd  )"

source $ScriptRoot/.init
source $ScriptRoot/../config/composer/.env.example
source $ScriptRoot/../config/composer/.env

if [ "$debug" = 'true' ];then set -x; fi

LNMP_USER=`id -u`:`id -g`

checkNetwork=`docker network ls -f driver=bridge -f name=lnmp_backend -q`

test -n "$checkNetwork" && network="lnmp_backend" || network="bridge"

mkdir -p vendor

docker run -i ${tty} --rm \
  --mount src=lnmp_composer-cache-data,target=${COMPOSER_CACHE_DIR} \
  --mount src=lnmp_composer_home-data,target=${COMPOSER_HOME} \
  --mount type=bind,src=$ScriptRoot/../config/composer/config.json,target=${COMPOSER_HOME}/config.json \
  bash \
  bash -c \
  "set -x;chown -R ${LNMP_USER} ${COMPOSER_CACHE_DIR}; \
   chown -R ${LNMP_USER} ${COMPOSER_HOME}; \
  "

exec docker run -i ${tty} --rm \
  --mount type=bind,src=$PWD,target=/app,consistency=delegated \
  --mount src=lnmp_composer-cache-data,target=${COMPOSER_CACHE_DIR} \
  --mount src=lnmp_composer_home-data,target=${COMPOSER_HOME} \
  --mount type=bind,src=$ScriptRoot/../config/composer/config.json,target=${COMPOSER_HOME}/config.json \
  --env-file $ScriptRoot/../config/composer/.env \
  --env PATH=${COMPOSER_HOME}/vendor/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
  --user ${LNMP_USER:-root:root} \
  --network $network \
  ${DOCKER_IMAGE}:${TAG} \
  composer "$@"

# --entrypoint /docker-entrypoint.composer \
