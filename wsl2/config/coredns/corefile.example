# https://coredns.io/plugins/
.:53 {  # 监听tcp和udp的53端口
    # bind 127.0.0.1 ::1
    # https://coredns.io/plugins/etcd/
    # etcd [ZONES...] {
    # fallthrough [ZONES...]
    # path PATH
    # endpoint ENDPOINT...
    # credentials USERNAME PASSWORD
    # tls CERT KEY CACERT
    # }
    etcd {   # 配置启用etcd插件,后面可以指定域名,例如 etcd test.com {
        stubzones # 启用存根区域功能。 stubzone仅在位于指定的第一个区域下方的etcd树中完成
        path /coredns # etcd里面的路径 默认为/skydns，以后所有的dns记录就是存储在该存根路径底下
        # endpoint http://localhost:2379 http://localhost:4001
        endpoint http://localhost:2379 # etcd访问地址，多个空格分开

        # upstream设置要使用的上游解析程序解决指向外部域名的在etcd（认为CNAME）中找到的外部域名。
        upstream 8.8.8.8:53 8.8.4.4:53

        fallthrough # 如果区域匹配但不能生成记录，则将请求传递给下一个插件
        # tls CERT KEY CACERT # 可选参数，etcd认证证书设置
    }
    # https://coredns.io/plugins/hosts/
    # hosts [FILE [ZONES...]] {
    # [INLINE]
    # ttl SECONDS
    # no_reverse
    # reload DURATION
    # fallthrough [ZONES...]
    # }
    # Load example.hosts file in the current directory.
    # hosts example.hosts {}
    hosts {
        192.168.1.122     sample1.xx.com
        192.168.1.123     sample2.xx.com
        reload 10s
        fallthrough
    }
    prometheus  # :9153
    cache 160
    loadbalance   # 负载均衡，开启DNS记录轮询策略
    forward . 114.114.114.114 8.8.8.8 # 上面etcd未查询到的请求转发给设置的DNS服务器解析
    log # 打印日志
    reload 10s
    ready # :8181
}
